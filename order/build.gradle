if (isRelease) {//todo 集成环境 order组件不能单独运行，需要依赖app壳
    apply plugin: 'com.android.library'
} else {//todo 测试环境 order能单独运行
    apply plugin: 'com.android.application'
}

def app_android = rootProject.ext.androidID
def app_dependencies = rootProject.ext.dependenciesID
def app_id = rootProject.ext.app_appid

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        if (!isRelease) {
            applicationId app_id.order
        }
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName

        testInstrumentationRunner app_android.testInstrumentationRunner

        //编译配置属性 在编译时生成java属性
        //切记：不能在android根节点，只能在defaultConfig或buildTypes节点下
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
        //切记：必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName       : project.getName(),
                             packageNameForAPT: packageNameForAPT]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    // 配置资源路径，方便测试环境，打包不集成到正式环境
//    sourceSets {
//        main {
//            if (!isRelease) {
//                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
//            } else {
//                // 集成化模式，整个项目打包apk
//                manifest.srcFile 'src/main/AndroidManifest.xml'
//                java {
//                    // release 时 debug 目录下文件不需要合并到主工程
//                    exclude '**/debug/**'
//                }
//                // resources {
//                // exclude '**/debug/**'
//                // }
//            }
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    app_dependencies.each { k, v -> implementation v }
    // 公共基础库
    implementation project(":common")

    // 注解模块
    implementation project(":router_annotations")

    // 使用注解处理器
    // 注解处理器
    annotationProcessor project(':router_complier')
}